#include "hydrompi.def"
!       
SUBROUTINE indata_simple(startdump)
!
USE dimension
USE matrix
USE vector
USE scalar
USE io_mod
#ifdef TRACERS
USE tracers_mod
#endif
!
USE mpi_inc
!
IMPLICIT NONE
!
! define local variables
!
INTEGER :: ii,iunit
INTEGER :: i,j,k
INTEGER :: startdump
character*3 :: outform
common/form/outform
!
! define basic dimensional quantities
!
	npart=ngrid*ngrid*ngrid
!
	n1=ngrid
	nparmax=npart/npes
	nxmax=n1
        xmax=float(nxmax)
	n1n1=n1*n1
	n11=n1-1
	n12=n1/2
	n121=n12-1
	ntot = n1*n1*n1
	n21=n12+1
	ngr2=ntot/2
	ngdim2=ngr2+n1n1
        nxnynz=nx*ny*nz
        n1pe=n1/npes
	n11pe=n1pe-1
!
! calculate fundamental density parameters:
!
	omega_dm=1.0
	omega_bm=1.0
	omega_m=1.0
	omega_lambda=0.0
	omega_tot=1.0
	omega_a=omega_m
	omega0=omega_tot
!
	cour=0.5
	ca=0.020
	eta1=0.3
!	eta2=0.005
	eta2=0.020
	dmax=2.0e10
	boltz=1.380658e-16
	mh=1.6605e-24
	norm=1.0
	gamma=1.66666667
!
! inversion of dmfact and bmfact
!
	if(dmfact.ne.0.0)then
	   dmfact=1.0/dmfact
	else
	   dmfact=1.0
	endif
	rdmfact=1.0/dmfact
	rbmfact=bmfact
	bmfact=1.0/bmfact
	box=1.0
!
! calculate derivate quantities 
!
        amass=rdmfact*float(ntot)/float(npart)
	r=boltz/mh
	dx=1.0*norm
	rdx=1.0/dx
	rgamma=1.0/gamma
	gamma1=(gamma+1.0)/(gamma-1.0)
	rgamma1=1.0/(gamma-1)
	m=(gamma-1.0)/(2.0*gamma)
	rm=1.0/m
	gf=(gamma+1.0)/(2.0*gamma)
!
#ifdef USEMPI
        CALL MPI_BARRIER(MPI_COMM_WORLD,ierr)
#endif
!	
END SUBROUTINE indata_simple
