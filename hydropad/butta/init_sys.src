#include "hydrompi.def"

SUBROUTINE init_sys(startdump)
!
USE dimension
USE scalar
#ifdef COOLING
USE ccool
#endif
!
USE mpi_inc 
!
IMPLICIT NONE
!
! local variables
!
INTEGER :: irho, irho2, irho3
integer :: startdump
!
!
! set the geometry, allocate basic arrays
!
        CALL alloc_arrays
!
! read simulation parameters and initialize k space and shape vector
!
!!!CALL indata(startdump)
CALL indata_simple
!
! initialize cooling functions
!
#ifdef COOLING
if(ncool.eq.1)then
          if(mype.eq.0)CALL init_cool

          CALL MPI_BARRIER(MPI_COMM_WORLD,ierr)

	  irho=  1000+mype
	  irho2= 2000+mype
	  irho3= 3000+mype
 
          open(unit=irho,file='lambdarho.fp',form='unformatted')
	  open(unit=irho2,file='lambdarho2.fp',form='unformatted')
	  open(unit=irho3,file='lambdarho3.fp',form='unformatted')
        
          read(irho)rhotable
          read(irho2)rho2table
	  read(irho3)rho3table

          close(irho)
	  close(irho2)
          close(irho3)

          allocate(trtable(rhotable))
          allocate(mrtable(rhotable))
          allocate(qrtable(rhotable))

          allocate(tr2table(rho2table))
          allocate(mr2table(rho2table))
          allocate(qr2table(rho2table))
	  
	  allocate(tr3table(rho3table))
          allocate(mr3table(rho3table))
          allocate(qr3table(rho3table))

          call readtables
endif
!
CALL MPI_BARRIER(MPI_COMM_WORLD,ierr)
#endif
!
! initalize fft descriptor vector
!
#ifdef FFT
desca=0
desca(1)=nx
desca(2)=ny
desca(3)=nz*npes

desca(5)=mype
desca(6)=npes

desca(8)=nx
desca(9)=ny
!
#endif
!
#ifdef USEMPI
CALL MPI_BARRIER(MPI_COMM_WORLD,ierr)
#endif
#ifdef COSMO
!
! initialize hydro and N-body quantities and set normalizations
!
CALL initialize(startdump)
!
#else
CALL initialize_hydro
#endif

#ifdef USEMPI
CALL MPI_BARRIER(MPI_COMM_WORLD,ierr)
#endif
!
END SUBROUTINE init_sys
