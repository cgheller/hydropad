#include "hydrompi.def"
!	
PROGRAM hydropad
!
USE dimension
USE matrix
USE vector
USE scalar
USE mpi_inc
!USE io_mod
#ifdef PROFILE
USE profile
#endif
IMPLICIT NONE
!
! local variables
!
integer nplot,ii
INTEGER :: startdump
INTEGER :: i,j,k
real*8 ti,tf
!
#ifdef PROFILE
t_cpu=0.0
#endif
!
! INITIALIZATION - MPI setup
!
#ifdef USEMPI
CALL MPI_Init(ierr)
CALL MPI_Comm_size(MPI_COMM_WORLD,npes,ierr)
CALL MPI_Comm_rank(MPI_COMM_WORLD,mype,ierr)

if(npes .ne. npesx*npesy*npesz)then
   write(*,*)"The number of processors does not fit the 3D distribution",npes, npesx, npesy, spesz
   CALL MPI_FINALIZE(ierr)
   stop
#else
npes=1
mype=0
write(*,*)
write(*,*)'The code is compiled without MPI directives'
write(*,*)
#endif
!
#ifdef PROFILE
if(mype.eq.0)then
  write(*,*)
  write(*,*)'WARNING ** !! ** the code is compiled '
  write(*,*)'for profiling tests'
  write(*,*)
endif
#endif
!
if(mype.eq.0)write(*,*)'*** STARTING SIMULATION ***'
!
! local variables -->
!
nstep=0
nplot=0
npl=1
first_time=0
initboxyn=0
!
! global variables -->
!
CALL init_sys(startdump)
#ifdef USEMPI
CALL MPI_BARRIER(MPI_COMM_WORLD,ierr)
#endif
!
! TIME LOOP STARTS
!
do while(told.lt.tstop)
!
  nstep=nstep+1
!
  if(mype.eq.0)then
    year=told*tnow*year_in_secs
    write(*,*)'Calculating step : ',nstep
    write(*,99)'t_i, t_f, dt : ',told,t,dt
99	    format(1x,a31,3(1x,e13.7))
  endif
!
! system evolution
!
  CALL evolve_sys(startdump)
!
#ifdef USEMPI
  CALL MPI_BARRIER(MPI_COMM_WORLD,ierr)
#endif
!
! TIME LOOP ENDS
!
enddo
!
! deallocate arrays
!
CALL dealloc_arrays

#ifdef USEMPI
CALL MPI_FINALIZE(ierr)
#endif
!
stop
END PROGRAM hydropad
