#include "hydrompi.def"
!
SUBROUTINE outdm
!
        USE dimension
        USE matrix
        USE vector
        USE scalar
        USE mpi_inc
!
! local variables
!
	IMPLICIT NONE
        character*1  :: ch1,ch2,ch3
        character*30 :: filename1
        character*30 :: filename2
        integer :: rec,ii,nlrec1,nrec
        integer :: iunit1,iunit2
	real(kind=4) :: x1r4,x2r4,x3r4
        INTEGER :: i,j,k
!
	iunit1=901
	iunit2=902
!
        call getindex(noutput,ch1,ch2,ch3)
!
        do ii=0,npes-1
#ifdef USEMPI
        CALL MPI_BARRIER(MPI_COMM_WORLD,ierr)
#endif
        if(mype.eq.ii)then
        filename1='pos.'//ch1//ch2//ch3//'.pff'
        filename2='vel.'//ch1//ch2//ch3//'.pff'
!	
        open(unit=iunit1,file=filename1,access='direct',recl=3*nlrec)
        open(unit=iunit2,file=filename2,access='direct',recl=3*nlrec)
!
	do i=1,nparmax
	  x1r4=real(x1(i))
	  x2r4=real(x2(i))
	  x3r4=real(x3(i))
	  nrec=i+mype*nparmax
	  write(iunit1,rec=nrec)x1r4,x2r4,x3r4
	enddo
	do i=1,nparmax
	  x1r4=real(v1(i))
	  x2r4=real(v2(i))
	  x3r4=real(v3(i))
	  nrec=i+mype*nparmax
	  write(iunit2,rec=nrec)x1r4,x2r4,x3r4
	enddo
!
	close(iunit1)
	close(iunit2)
!
        endif
        enddo
!
#ifdef USEMPI
	CALL MPI_BARRIER(MPI_COMM_WORLD,ierr)
#endif
!
END SUBROUTINE outdm
